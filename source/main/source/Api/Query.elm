-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Query exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


{-| TEAMeにあいさつをする
-}
hello : SelectionSet String RootQuery
hello =
    Object.selectionForField "String" "hello" [] Decode.string


type alias UserPrivateRequiredArguments =
    { accessToken : String }


{-| ユーザーのデータ

  - accessToken - アクセストークン

-}
userPrivate : UserPrivateRequiredArguments -> SelectionSet decodesTo Api.Object.UserData -> SelectionSet decodesTo RootQuery
userPrivate requiredArgs object_ =
    Object.selectionForCompositeField "userPrivate" [ Argument.required "accessToken" requiredArgs.accessToken Encode.string ] object_ identity


type alias UserRequiredArguments =
    { userId : String }


{-| 説明文

  - userId - 取得したいユーザーID

-}
user : UserRequiredArguments -> SelectionSet decodesTo Api.Object.UserData -> SelectionSet decodesTo RootQuery
user requiredArgs object_ =
    Object.selectionForCompositeField "user" [ Argument.required "userId" requiredArgs.userId Encode.string ] object_ identity


{-| すべてのチームを取得する
-}
allTeam : SelectionSet decodesTo Api.Object.Team -> SelectionSet (List decodesTo) RootQuery
allTeam object_ =
    Object.selectionForCompositeField "allTeam" [] object_ (identity >> Decode.list)


type alias TeamRequiredArguments =
    { id : String }


{-| チームのデータ

  - id - チームのID

-}
team : TeamRequiredArguments -> SelectionSet decodesTo Api.Object.Team -> SelectionSet decodesTo RootQuery
team requiredArgs object_ =
    Object.selectionForCompositeField "team" [ Argument.required "id" requiredArgs.id Encode.string ] object_ identity
